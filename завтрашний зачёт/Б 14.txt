Билет №14
1.	Разработать структуру базы данных пункта выдачи заказов в СУБД MySQL;
2.	Разработать структуру базы данных пункта выдачи заказов в СУБД PostgreSQL;
3.	Заполнить таблицы тестовым набором данных.

1111111111111111111111111111111111111111111
-- Создание базы данных
CREATE DATABASE IF NOT EXISTS pickup_point;

-- Использование базы данных
USE pickup_point;

-- Таблица: Клиенты (Customers)
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(255) NOT NULL,
    LastName VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(20),
    Email VARCHAR(255)
);

-- Таблица: Заказы (Orders)
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT NOT NULL,
    OrderDate DATETIME NOT NULL,
    DeliveryDate DATE, -- Дата доставки (если указана)
    OrderStatus ENUM('Создан', 'Оплачен', 'Отправлен', 'В пути', 'Ожидает выдачи', 'Выдан', 'Отменен') NOT NULL,
    TotalAmount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Таблица: Товары (Products)
CREATE TABLE Products (
    ProductID INT PRIMARY KEY AUTO_INCREMENT,
    ProductName VARCHAR(255) NOT NULL,
    Description TEXT,
    Price DECIMAL(10, 2) NOT NULL
);

-- Таблица: Детали заказа (OrderItems)
CREATE TABLE OrderItems (
    OrderItemID INT PRIMARY KEY AUTO_INCREMENT,
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    UnitPrice DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Таблица: Пункты выдачи (PickupPoints)
CREATE TABLE PickupPoints (
    PickupPointID INT PRIMARY KEY AUTO_INCREMENT,
    Address VARCHAR(255) NOT NULL,
    City VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(20),
    WorkingHours VARCHAR(255) -- Часы работы (например, "10:00-20:00")
);

-- Таблица: Связь заказов и пунктов выдачи (OrderPickupPoints)
CREATE TABLE OrderPickupPoints (
    OrderPickupPointID INT PRIMARY KEY AUTO_INCREMENT,
    OrderID INT NOT NULL,
    PickupPointID INT NOT NULL,
    PickupDate DATE, -- Планируемая дата выдачи
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (PickupPointID) REFERENCES PickupPoints(PickupPointID)
);

222222222222222222222222222222222222222222
-- Создание базы данных
CREATE DATABASE pickup_point;

-- Подключение к базе данных
\c pickup_point

-- Таблица: Клиенты (Customers)
CREATE TABLE Customers (
    CustomerID SERIAL PRIMARY KEY,
    FirstName VARCHAR(255) NOT NULL,
    LastName VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(20),
    Email VARCHAR(255)
);

-- Таблица: Заказы (Orders)
CREATE TABLE Orders (
    OrderID SERIAL PRIMARY KEY,
    CustomerID INT NOT NULL,
    OrderDate TIMESTAMP NOT NULL,
    DeliveryDate DATE, -- Дата доставки (если указана)
    OrderStatus VARCHAR(20) CHECK (OrderStatus IN ('Создан', 'Оплачен', 'Отправлен', 'В пути', 'Ожидает выдачи', 'Выдан', 'Отменен')) NOT NULL,
    TotalAmount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Таблица: Товары (Products)
CREATE TABLE Products (
    ProductID SERIAL PRIMARY KEY,
    ProductName VARCHAR(255) NOT NULL,
    Description TEXT,
    Price DECIMAL(10, 2) NOT NULL
);

-- Таблица: Детали заказа (OrderItems)
CREATE TABLE OrderItems (
    OrderItemID SERIAL PRIMARY KEY,
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    UnitPrice DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Таблица: Пункты выдачи (PickupPoints)
CREATE TABLE PickupPoints (
    PickupPointID SERIAL PRIMARY KEY,
    Address VARCHAR(255) NOT NULL,
    City VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(20),
    WorkingHours VARCHAR(255) -- Часы работы (например, "10:00-20:00")
);

-- Таблица: Связь заказов и пунктов выдачи (OrderPickupPoints)
CREATE TABLE OrderPickupPoints (
    OrderPickupPointID SERIAL PRIMARY KEY,
    OrderID INT NOT NULL,
    PickupPointID INT NOT NULL,
    PickupDate DATE, -- Планируемая дата выдачи
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (PickupPointID) REFERENCES PickupPoints(PickupPointID)
);

33333333333333333333333333333
-- Заполнение таблицы Customers
INSERT INTO Customers (FirstName, LastName, PhoneNumber, Email) VALUES
('Иван', 'Иванов', '123-456-7890', 'ivan.ivanov@example.com'),
('Мария', 'Сидорова', '987-654-3210', 'maria.sidorova@example.com');

-- Заполнение таблицы Products
INSERT INTO Products (ProductName, Description, Price) VALUES
('Книга "Python для начинающих"', 'Книга по программированию на Python', 1000.00),
('Наушники беспроводные', 'Беспроводные наушники', 3000.00);

-- Заполнение таблицы PickupPoints
INSERT INTO PickupPoints (Address, City, PhoneNumber, WorkingHours) VALUES
('ул. Ленина, 1', 'Москва', '111-222-3344', '10:00-21:00'),
('ул. Пушкина, 10', 'Санкт-Петербург', '444-555-6677', '09:00-20:00');

-- Заполнение таблицы Orders
INSERT INTO Orders (CustomerID, OrderDate, OrderStatus, TotalAmount) VALUES
(1, '2023-12-28 10:00:00', 'Оплачен', 4000.00),
(2, '2023-12-28 11:00:00', 'Создан', 1000.00);

-- Заполнение таблицы OrderItems
INSERT INTO OrderItems (OrderID, ProductID, Quantity, UnitPrice) VALUES
(1, 1, 1, 1000.00),
(1, 2, 1, 3000.00),
(2, 1, 1, 1000.00);

-- Заполнение таблицы OrderPickupPoints
INSERT INTO OrderPickupPoints (OrderID, PickupPointID, PickupDate) VALUES
(1, 1, '2023-12-29'),
(2, 2, '2023-12-29');