Билет №13
1.	Разработать структуру базы данных электронного фотоальбома в СУБД MySQL;
2.	Разработать структуру базы данных электронного фотоальбома в СУБД PostgreSQL;
3.	Заполнить таблицы тестовым набором данных.

111111111111111111111111111111111111111111
-- Создание базы данных
CREATE DATABASE IF NOT EXISTS photo_album;

-- Использование базы данных
USE photo_album;

-- Таблица: Пользователи (Users)
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(255) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,  -- Хранить хэш пароля!
    Email VARCHAR(255) UNIQUE,
    FirstName VARCHAR(255),
    LastName VARCHAR(255)
);

-- Таблица: Альбомы (Albums)
CREATE TABLE Albums (
    AlbumID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT NOT NULL,
    AlbumName VARCHAR(255) NOT NULL,
    Description TEXT,
    CreationDate DATETIME NOT NULL,
    Visibility ENUM('Public', 'Private', 'Shared'),  -- Видимость альбома
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Таблица: Фотографии (Photos)
CREATE TABLE Photos (
    PhotoID INT PRIMARY KEY AUTO_INCREMENT,
    AlbumID INT NOT NULL,
    Filename VARCHAR(255) NOT NULL, -- Имя файла (или путь к файлу)
    Title VARCHAR(255),
    Description TEXT,
    UploadDate DATETIME NOT NULL,
    Latitude DECIMAL(10, 8), -- Широта
    Longitude DECIMAL(11, 8), -- Долгота
    FOREIGN KEY (AlbumID) REFERENCES Albums(AlbumID)
);

-- Таблица: Теги (Tags)
CREATE TABLE Tags (
    TagID INT PRIMARY KEY AUTO_INCREMENT,
    TagName VARCHAR(255) NOT NULL UNIQUE
);

-- Таблица: Связь фотографий и тегов (PhotoTags)
CREATE TABLE PhotoTags (
    PhotoID INT NOT NULL,
    TagID INT NOT NULL,
    PRIMARY KEY (PhotoID, TagID),
    FOREIGN KEY (PhotoID) REFERENCES Photos(PhotoID),
    FOREIGN KEY (TagID) REFERENCES Tags(TagID)
);

-- Таблица: Комментарии (Comments)
CREATE TABLE Comments (
    CommentID INT PRIMARY KEY AUTO_INCREMENT,
    PhotoID INT NOT NULL,
    UserID INT NOT NULL,
    CommentText TEXT NOT NULL,
    CommentDate DATETIME NOT NULL,
    FOREIGN KEY (PhotoID) REFERENCES Photos(PhotoID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

2222222222222222222222222222222222222222222
-- Создание базы данных
CREATE DATABASE photo_album;

-- Подключение к базе данных
\c photo_album

-- Таблица: Пользователи (Users)
CREATE TABLE Users (
    UserID SERIAL PRIMARY KEY,
    Username VARCHAR(255) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,  -- Хранить хэш пароля!
    Email VARCHAR(255) UNIQUE,
    FirstName VARCHAR(255),
    LastName VARCHAR(255)
);

-- Таблица: Альбомы (Albums)
CREATE TABLE Albums (
    AlbumID SERIAL PRIMARY KEY,
    UserID INT NOT NULL,
    AlbumName VARCHAR(255) NOT NULL,
    Description TEXT,
    CreationDate TIMESTAMP NOT NULL,
    Visibility VARCHAR(20) CHECK (Visibility IN ('Public', 'Private', 'Shared')),  -- Видимость альбома
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- Таблица: Фотографии (Photos)
CREATE TABLE Photos (
    PhotoID SERIAL PRIMARY KEY,
    AlbumID INT NOT NULL,
    Filename VARCHAR(255) NOT NULL, -- Имя файла (или путь к файлу)
    Title VARCHAR(255),
    Description TEXT,
    UploadDate TIMESTAMP NOT NULL,
    Latitude DECIMAL(10, 8), -- Широта
    Longitude DECIMAL(11, 8), -- Долгота
    FOREIGN KEY (AlbumID) REFERENCES Albums(AlbumID)
);

-- Таблица: Теги (Tags)
CREATE TABLE Tags (
    TagID SERIAL PRIMARY KEY,
    TagName VARCHAR(255) NOT NULL UNIQUE
);

-- Таблица: Связь фотографий и тегов (PhotoTags)
CREATE TABLE PhotoTags (
    PhotoID INT NOT NULL,
    TagID INT NOT NULL,
    PRIMARY KEY (PhotoID, TagID),
    FOREIGN KEY (PhotoID) REFERENCES Photos(PhotoID),
    FOREIGN KEY (TagID) REFERENCES Tags(TagID)
);

-- Таблица: Комментарии (Comments)
CREATE TABLE Comments (
    CommentID SERIAL PRIMARY KEY,
    PhotoID INT NOT NULL,
    UserID INT NOT NULL,
    CommentText TEXT NOT NULL,
    CommentDate TIMESTAMP NOT NULL,
    FOREIGN KEY (PhotoID) REFERENCES Photos(PhotoID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

333333333333333333333333333333333333333333333
-- Заполнение таблицы Users
INSERT INTO Users (Username, Password, Email, FirstName, LastName) VALUES
('user1', 'hashed_password_1', 'user1@example.com', 'Иван', 'Иванов'),
('user2', 'hashed_password_2', 'user2@example.com', 'Мария', 'Сидорова');

-- Заполнение таблицы Albums
INSERT INTO Albums (UserID, AlbumName, Description, CreationDate, Visibility) VALUES
(1, 'Мои фотографии', 'Личные фотографии', '2023-12-28 10:00:00', 'Private'),
(2, 'Путешествие в горы', 'Фотографии из поездки в горы', '2023-12-27 15:00:00', 'Public');

-- Заполнение таблицы Photos
INSERT INTO Photos (AlbumID, Filename, Title, Description, UploadDate, Latitude, Longitude) VALUES
(1, 'photo1.jpg', 'Первая фотография', 'Описание фото 1', '2023-12-28 10:30:00', 55.7558, 37.6176),
(2, 'photo2.jpg', 'Вид на горы', 'Описание фото 2', '2023-12-27 16:00:00', 43.4214, 40.3245);

-- Заполнение таблицы Tags
INSERT INTO Tags (TagName) VALUES
('Природа'),
('Горы'),
('Люди');

-- Заполнение таблицы PhotoTags
INSERT INTO PhotoTags (PhotoID, TagID) VALUES
(1, 3),
(2, 1),
(2, 2);

-- Заполнение таблицы Comments
INSERT INTO Comments (PhotoID, UserID, CommentText, CommentDate) VALUES
(1, 2, 'Отличное фото!', '2023-12-28 11:00:00'),
(2, 1, 'Красивый вид!', '2023-12-27 17:00:00');